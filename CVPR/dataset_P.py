
def test_1():
    # Исходные данные из задачи P-n16-k8

    # Координаты узлов и спрос
    coordinates = [
        (30, 40), (37, 52), (49, 49), (52, 64), (31, 62), (52, 33), (42, 41), (52, 41),
        (57, 58), (62, 42), (42, 57), (27, 68), (43, 67), (58, 48), (58, 27), (37, 69)
    ]

    demands = [
        0, 19, 30, 16, 23, 11, 31, 15, 28, 8, 8, 7, 14, 6, 19, 11
    ]

    # Вместимость грузовика
    capacity = 35
    answer = 450
    car = 8

    return coordinates, demands, capacity, car, answer


def test_2():
    # Исходные данные из задачи P-n19-k2

    # Координаты узлов и спрос
    coordinates = [
        (30, 40), (37, 52), (49, 43), (52, 64), (31, 62), (52, 33), (42, 41), (52, 41),
        (57, 58), (62, 42), (42, 57), (27, 68), (43, 67), (58, 27), (37, 69), (61, 33),
        (62, 63), (63, 69), (45, 35)
    ]

    demands = [
        0, 19, 30, 16, 23, 11, 31, 15, 28, 14, 8, 7, 14, 19, 11, 26, 17, 6, 15
    ]

    # Вместимость грузовика
    capacity = 160
    answer = 212
    car = 2

    return coordinates, demands, capacity, car, answer


def test_3():
    # Исходные данные из задачи P-n20-k2

    # Координаты узлов и спрос
    coordinates = [
        (30, 40), (37, 52), (49, 49), (52, 64), (31, 62), (52, 33), (42, 41), (52, 41),
        (57, 58), (62, 42), (42, 57), (27, 68), (43, 67), (58, 48), (58, 27), (37, 69),
        (61, 33), (62, 63), (63, 69), (45, 35)
    ]

    demands = [
        0, 19, 30, 16, 23, 11, 31, 15, 28, 8, 8, 7, 14, 6, 19, 11, 26, 17, 6, 15
    ]

    # Вместимость грузовика
    capacity = 160
    answer = 216
    car = 2

    return coordinates, demands, capacity, car, answer


def test_4():
    # Исходные данные из задачи P-n21-k2

    # Координаты узлов и спрос
    coordinates = [
        (30, 40), (37, 52), (49, 49), (52, 64), (31, 62), (52, 33), (42, 41), (52, 41),
        (57, 58), (62, 42), (42, 57), (27, 68), (43, 67), (58, 48), (58, 27), (37, 69),
        (38, 46), (61, 33), (62, 63), (63, 69), (45, 35)
    ]

    demands = [
        0, 7, 30, 16, 23, 11, 19, 15, 28, 8, 8, 7, 14, 6, 19, 11, 12, 26, 17, 6, 15
    ]

    # Вместимость грузовика
    capacity = 160
    answer = 211
    car = 2

    return coordinates, demands, capacity, car, answer


def test_5():
    # Исходные данные из задачи P-n22-k2

    # Координаты узлов и спрос
    coordinates = [
        (30, 40), (37, 52), (49, 49), (52, 64), (31, 62), (52, 33), (42, 41), (52, 41),
        (57, 58), (62, 42), (42, 57), (27, 68), (43, 67), (58, 48), (58, 27), (37, 69),
        (38, 46), (61, 33), (62, 63), (63, 69), (45, 35), (56, 37)
    ]

    demands = [
        0, 7, 30, 16, 23, 11, 19, 15, 28, 8, 8, 7, 14, 6, 19, 11, 12, 26, 17, 6, 15, 10
    ]

    # Вместимость грузовика
    capacity = 160
    answer = 216
    car = 2

    return coordinates, demands, capacity, car, answer


def test_6():
    # Исходные данные из задачи P-n22-k8

    # Координаты узлов и спрос
    coordinates = [
        (145, 215), (151, 264), (159, 261), (130, 254), (128, 252), (163, 247),
        (146, 246), (161, 242), (142, 239), (163, 236), (148, 232), (128, 231),
        (156, 217), (129, 214), (146, 208), (164, 208), (141, 206), (147, 193),
        (164, 193), (129, 189), (155, 185), (139, 182)
    ]

    demands = [
        0, 1100, 700, 800, 1400, 2100, 400, 800, 100, 500, 600, 1200,
        1300, 1300, 300, 900, 2100, 1000, 900, 2500, 1800, 700
    ]

    # Вместимость грузовика
    capacity = 3000
    answer = 603
    car = 8

    return coordinates, demands, capacity, car, answer


def test_7():
    # Исходные данные из задачи P-n23-k8

    # Координаты узлов и спрос
    coordinates = [
        (30, 40), (37, 52), (49, 49), (52, 64), (31, 62), (52, 33),
        (42, 41), (52, 41), (57, 58), (62, 42), (42, 57), (27, 68),
        (43, 67), (58, 48), (58, 27), (37, 69), (38, 46), (61, 33),
        (62, 63), (63, 69), (45, 35), (32, 39), (56, 37)
    ]

    demands = [
        0, 7, 30, 16, 23, 11, 19, 15, 28, 8, 8, 7, 14, 6, 19, 11,
        12, 26, 17, 6, 15, 5, 10
    ]

    # Вместимость грузовика
    capacity = 40
    answer = 529
    car = 8

    return coordinates, demands, capacity, car, answer


def test_8():
    # Исходные данные из задачи P-n40-k5

    # Координаты узлов и спрос
    coordinates = [
        (30, 40), (37, 52), (49, 49), (52, 64), (20, 26), (40, 30), (21, 47), (17, 63), (31, 62), (52, 33),
        (51, 21), (42, 41), (31, 32), (5, 25), (12, 42), (36, 16), (52, 41), (27, 23), (17, 33), (13, 13),
        (57, 58), (62, 42), (42, 57), (16, 57), (8, 52), (7, 38), (27, 68), (30, 48), (43, 67), (58, 48),
        (58, 27), (37, 69), (38, 46), (46, 10), (61, 33), (62, 63), (63, 69), (32, 22), (45, 35), (59, 15)
    ]

    demands = [
        0, 7, 30, 16, 9, 21, 15, 19, 23, 11, 5, 19, 29, 23, 21, 10,
        15, 3, 41, 9, 28, 8, 8, 16, 10, 28, 7, 15, 14, 6, 19, 11,
        12, 23, 26, 17, 6, 9, 15, 14
    ]

    # Вместимость грузовика
    capacity = 140
    answer = 458
    car = 5

    return coordinates, demands, capacity, car, answer


def test_9():
    # Исходные данные из задачи P-n45-k5

    # Координаты узлов и спрос
    coordinates = [
        (30, 40), (37, 52), (49, 49), (52, 64), (20, 26), (40, 30), (21, 47), (17, 63), (31, 62), (52, 33),
        (51, 21), (42, 41), (31, 32), (5, 25), (12, 42), (36, 16), (52, 41), (27, 23), (17, 33), (13, 13),
        (57, 58), (62, 42), (42, 57), (16, 57), (8, 52), (7, 38), (27, 68), (30, 48), (43, 67), (58, 48),
        (58, 27), (37, 69), (38, 46), (46, 10), (61, 33), (62, 63), (63, 69), (32, 22), (45, 35), (59, 15),
        (5, 6), (10, 17), (21, 10), (5, 64), (30, 15)
    ]

    demands = [
        0, 7, 30, 16, 9, 21, 15, 19, 23, 11, 5, 19, 29, 23, 21, 10,
        15, 3, 41, 9, 28, 8, 8, 16, 10, 28, 7, 15, 14, 6, 19, 11,
        12, 23, 26, 17, 6, 9, 15, 14, 7, 27, 13, 11, 16
    ]

    # Вместимость грузовика
    capacity = 150
    answer = 510
    car = 5

    return coordinates, demands, capacity, car, answer


def test_10():
    # Исходные данные из задачи P-n50-k7

    # Координаты узлов и спрос
    coordinates = [
        (40, 40), (22, 22), (36, 26), (21, 45), (45, 35), (55, 20), (33, 34), (50, 50), (55, 45), (26, 59),
        (40, 66), (55, 65), (35, 51), (62, 35), (62, 57), (62, 24), (21, 36), (33, 44), (9, 56), (62, 48),
        (66, 14), (44, 13), (26, 13), (11, 28), (7, 43), (17, 64), (41, 46), (55, 34), (35, 16), (52, 26),
        (43, 26), (31, 76), (22, 53), (26, 29), (50, 40), (55, 50), (54, 10), (60, 15), (47, 66), (30, 60),
        (30, 50), (12, 17), (15, 14), (16, 19), (21, 48), (50, 30), (51, 42), (50, 15), (48, 21), (12, 38)
    ]

    demands = [
        0, 18, 26, 11, 30, 21, 19, 15, 16, 29, 26, 37, 16, 12, 31, 8, 19, 20, 13, 15,
        22, 28, 12, 6, 27, 14, 18, 17, 29, 13, 22, 25, 28, 27, 19, 10, 12, 14, 24, 16,
        33, 15, 11, 18, 17, 21, 27, 19, 20, 5
    ]

    # Вместимость грузовика
    capacity = 150
    answer = 554
    car = 7

    return coordinates, demands, capacity, car, answer


def test_11():
    # Исходные данные из задачи P-n50-k8

    # Координаты узлов и спрос
    coordinates = [
        (40, 40), (22, 22), (36, 26), (21, 45), (45, 35), (55, 20), (33, 34), (50, 50), (55, 45), (26, 59),
        (40, 66), (55, 65), (35, 51), (62, 35), (62, 57), (62, 24), (21, 36), (33, 44), (9, 56), (62, 48),
        (66, 14), (44, 13), (26, 13), (11, 28), (7, 43), (17, 64), (41, 46), (55, 34), (35, 16), (52, 26),
        (43, 26), (31, 76), (22, 53), (26, 29), (50, 40), (55, 50), (54, 10), (60, 15), (47, 66), (30, 60),
        (30, 50), (12, 17), (15, 14), (16, 19), (21, 48), (50, 30), (51, 42), (50, 15), (48, 21), (12, 38)
    ]

    demands = [
        0, 18, 26, 11, 30, 21, 19, 15, 16, 29, 26, 37, 16, 12, 31, 8, 19, 20, 13, 15,
        22, 28, 12, 6, 27, 14, 18, 17, 29, 13, 22, 25, 28, 27, 19, 10, 12, 14, 24, 16,
        33, 15, 11, 18, 17, 21, 27, 19, 20, 5
    ]

    # Вместимость грузовика
    capacity = 120
    answer = 631
    car = 8

    return coordinates, demands, capacity, car, answer


def test_12():
    # Исходные данные из задачи P-n50-k10

    # Координаты узлов и спрос
    coordinates = [
        (40, 40), (22, 22), (36, 26), (21, 45), (45, 35), (55, 20), (33, 34), (50, 50), (55, 45), (26, 59),
        (40, 66), (55, 65), (35, 51), (62, 35), (62, 57), (62, 24), (21, 36), (33, 44), (9, 56), (62, 48),
        (66, 14), (44, 13), (26, 13), (11, 28), (7, 43), (17, 64), (41, 46), (55, 34), (35, 16), (52, 26),
        (43, 26), (31, 76), (22, 53), (26, 29), (50, 40), (55, 50), (54, 10), (60, 15), (47, 66), (30, 60),
        (30, 50), (12, 17), (15, 14), (16, 19), (21, 48), (50, 30), (51, 42), (50, 15), (48, 21), (12, 38)
    ]

    demands = [
        0, 18, 26, 11, 30, 21, 19, 15, 16, 29, 26, 37, 16, 12, 31, 8, 19, 20, 13, 15,
        22, 28, 12, 6, 27, 14, 18, 17, 29, 13, 22, 25, 28, 27, 19, 10, 12, 14, 24, 16,
        33, 15, 11, 18, 17, 21, 27, 19, 20, 5
    ]

    # Вместимость грузовика
    capacity = 100
    answer = 696
    car = 10

    return coordinates, demands, capacity, car, answer


def test_13():
    # Исходные данные из задачи P-n51-k10

    # Координаты узлов и спрос
    coordinates = [
        (30, 40), (37, 52), (49, 49), (52, 64), (20, 26), (40, 30), (21, 47), (17, 63), (31, 62), (52, 33),
        (51, 21), (42, 41), (31, 32), (5, 25), (12, 42), (36, 16), (52, 41), (27, 23), (17, 33), (13, 13),
        (57, 58), (62, 42), (42, 57), (16, 57), (8, 52), (7, 38), (27, 68), (30, 48), (43, 67), (58, 48),
        (58, 27), (37, 69), (38, 46), (46, 10), (61, 33), (62, 63), (63, 69), (32, 22), (45, 35), (59, 15),
        (5, 6), (10, 17), (21, 10), (5, 64), (30, 15), (39, 10), (32, 39), (25, 32), (25, 55), (48, 28), (56, 37)
    ]

    demands = [
        0, 7, 30, 16, 9, 21, 15, 19, 23, 11, 5, 19, 29, 23, 21, 10, 15, 3, 41, 9,
        28, 8, 8, 16, 10, 28, 7, 15, 14, 6, 19, 11, 12, 23, 26, 17, 6, 9, 15, 14,
        7, 27, 13, 11, 16, 10, 5, 25, 17, 18, 10
    ]

    # Вместимость грузовика
    capacity = 80
    answer = 741
    car = 10

    return coordinates, demands, capacity, car, answer


def test_14():
    # Исходные данные из задачи P-n55-k7

    # Координаты узлов и спрос
    coordinates = [
        (40, 40), (22, 22), (36, 26), (21, 45), (45, 35), (55, 20), (33, 34), (50, 50), (55, 45), (26, 59),
        (40, 66), (55, 65), (35, 51), (62, 35), (62, 57), (62, 24), (21, 36), (33, 44), (9, 56), (62, 48),
        (66, 14), (44, 13), (26, 13), (11, 28), (7, 43), (17, 64), (41, 46), (55, 34), (35, 16), (52, 26),
        (43, 26), (31, 76), (22, 53), (26, 29), (50, 40), (55, 50), (54, 10), (60, 15), (47, 66), (30, 60),
        (30, 50), (12, 17), (15, 14), (16, 19), (21, 48), (50, 30), (51, 42), (50, 15), (48, 21), (12, 38),
        (15, 56), (29, 39), (54, 38), (55, 57), (67, 41)
    ]

    demands = [
        0, 18, 26, 11, 30, 21, 19, 15, 16, 29, 26, 37, 16, 12, 31, 8, 19, 20, 13, 15,
        22, 28, 12, 6, 27, 14, 18, 17, 29, 13, 22, 25, 28, 27, 19, 10, 12, 14, 24, 16,
        33, 15, 11, 18, 17, 21, 27, 19, 20, 5, 22, 12, 19, 22, 16
    ]

    # Вместимость грузовика
    capacity = 170
    answer = 568
    car = 7

    return coordinates, demands, capacity, car, answer


def test_15():
    # Исходные данные из задачи P-n55-k10

    # Координаты узлов и спрос
    coordinates = [
        (40, 40), (22, 22), (36, 26), (21, 45), (45, 35), (55, 20), (33, 34), (50, 50), (55, 45), (26, 59),
        (40, 66), (55, 65), (35, 51), (62, 35), (62, 57), (62, 24), (21, 36), (33, 44), (9, 56), (62, 48),
        (66, 14), (44, 13), (26, 13), (11, 28), (7, 43), (17, 64), (41, 46), (55, 34), (35, 16), (52, 26),
        (43, 26), (31, 76), (22, 53), (26, 29), (50, 40), (55, 50), (54, 10), (60, 15), (47, 66), (30, 60),
        (30, 50), (12, 17), (15, 14), (16, 19), (21, 48), (50, 30), (51, 42), (50, 15), (48, 21), (12, 38),
        (15, 56), (29, 39), (54, 38), (55, 57), (67, 41)
    ]

    demands = [
        0, 18, 26, 11, 30, 21, 19, 15, 16, 29, 26, 37, 16, 12, 31, 8, 19, 20, 13, 15,
        22, 28, 12, 6, 27, 14, 18, 17, 29, 13, 22, 25, 28, 27, 19, 10, 12, 14, 24, 16,
        33, 15, 11, 18, 17, 21, 27, 19, 20, 5, 22, 12, 19, 22, 16
    ]

    # Вместимость грузовика
    capacity = 115
    answer = 694
    car = 10

    return coordinates, demands, capacity, car, answer


def test_16():
    # Исходные данные из задачи P-n55-k15

    # Координаты узлов и спрос
    coordinates = [
        (40, 40), (22, 22), (36, 26), (21, 45), (45, 35), (55, 20), (33, 34), (50, 50), (55, 45), (26, 59),
        (40, 66), (55, 65), (35, 51), (62, 35), (62, 57), (62, 24), (21, 36), (33, 44), (9, 56), (62, 48),
        (66, 14), (44, 13), (26, 13), (11, 28), (7, 43), (17, 64), (41, 46), (55, 34), (35, 16), (52, 26),
        (43, 26), (31, 76), (22, 53), (26, 29), (50, 40), (55, 50), (54, 10), (60, 15), (47, 66), (30, 60),
        (30, 50), (12, 17), (15, 14), (16, 19), (21, 48), (50, 30), (51, 42), (50, 15), (48, 21), (12, 38),
        (15, 56), (29, 39), (54, 38), (55, 57), (67, 41)
    ]

    demands = [
        0, 18, 26, 11, 30, 21, 19, 15, 16, 29, 26, 37, 16, 12, 31, 8, 19, 20, 13, 15,
        22, 28, 12, 6, 27, 14, 18, 17, 29, 13, 22, 25, 28, 27, 19, 10, 12, 14, 24, 16,
        33, 15, 11, 18, 17, 21, 27, 19, 20, 5, 22, 12, 19, 22, 16
    ]

    # Вместимость грузовика
    capacity = 70
    answer = 989
    car = 15

    return coordinates, demands, capacity, car, answer


def test_17():
    # Исходные данные из задачи P-n60-k10

    # Координаты узлов и спрос
    coordinates = [
        (40, 40), (22, 22), (36, 26), (21, 45), (45, 35), (55, 20), (33, 34), (50, 50), (55, 45), (26, 59),
        (40, 66), (55, 65), (35, 51), (62, 35), (62, 57), (62, 24), (21, 36), (33, 44), (9, 56), (62, 48),
        (66, 14), (44, 13), (26, 13), (11, 28), (7, 43), (17, 64), (41, 46), (55, 34), (35, 16), (52, 26),
        (43, 26), (31, 76), (22, 53), (26, 29), (50, 40), (55, 50), (54, 10), (60, 15), (47, 66), (30, 60),
        (30, 50), (12, 17), (15, 14), (16, 19), (21, 48), (50, 30), (51, 42), (50, 15), (48, 21), (12, 38),
        (15, 56), (29, 39), (54, 38), (55, 57), (67, 41), (10, 70), (6, 25), (65, 27), (40, 60), (50, 4)
    ]

    demands = [
        0, 18, 26, 11, 30, 21, 19, 15, 16, 29, 26, 37, 16, 12, 31, 8, 19, 20, 13, 15,
        22, 28, 12, 6, 27, 14, 18, 17, 29, 13, 22, 25, 28, 27, 19, 10, 12, 14, 24, 16,
        33, 15, 11, 18, 17, 21, 27, 19, 20, 5, 22, 12, 19, 22, 16, 7, 26, 14, 21, 24
    ]

    # Вместимость грузовика
    capacity = 120
    answer = 744
    car = 10

    return coordinates, demands, capacity, car, answer


def test_18():
    # Исходные данные из задачи P-n60-k15

    # Координаты узлов и спрос
    coordinates = [
        (40, 40), (22, 22), (36, 26), (21, 45), (45, 35), (55, 20), (33, 34), (50, 50), (55, 45), (26, 59),
        (40, 66), (55, 65), (35, 51), (62, 35), (62, 57), (62, 24), (21, 36), (33, 44), (9, 56), (62, 48),
        (66, 14), (44, 13), (26, 13), (11, 28), (7, 43), (17, 64), (41, 46), (55, 34), (35, 16), (52, 26),
        (43, 26), (31, 76), (22, 53), (26, 29), (50, 40), (55, 50), (54, 10), (60, 15), (47, 66), (30, 60),
        (30, 50), (12, 17), (15, 14), (16, 19), (21, 48), (50, 30), (51, 42), (50, 15), (48, 21), (12, 38),
        (15, 56), (29, 39), (54, 38), (55, 57), (67, 41), (10, 70), (6, 25), (65, 27), (40, 60), (70, 64)
    ]

    demands = [
        0, 18, 26, 11, 30, 21, 19, 15, 16, 29, 26, 37, 16, 12, 31, 8, 19, 20, 13, 15,
        22, 28, 12, 6, 27, 14, 18, 17, 29, 13, 22, 25, 28, 27, 19, 10, 12, 14, 24, 16,
        33, 15, 11, 18, 17, 21, 27, 19, 20, 5, 22, 12, 19, 22, 16, 7, 26, 14, 21, 24
    ]

    # Вместимость грузовика
    capacity = 80
    answer = 968
    car = 15

    return coordinates, demands, capacity, car, answer


def test_19():
    # Исходные данные из задачи P-n65-k10

    # Координаты узлов и спрос
    coordinates = [
        (40, 40), (22, 22), (36, 26), (21, 45), (45, 35), (55, 20), (33, 34), (50, 50), (55, 45), (26, 59),
        (40, 66), (55, 65), (35, 51), (62, 35), (62, 57), (62, 24), (21, 36), (33, 44), (9, 56), (62, 48),
        (66, 14), (44, 13), (26, 13), (11, 28), (7, 43), (17, 64), (41, 46), (55, 34), (35, 16), (52, 26),
        (43, 26), (31, 76), (22, 53), (26, 29), (50, 40), (55, 50), (54, 10), (60, 15), (47, 66), (30, 60),
        (30, 50), (12, 17), (15, 14), (16, 19), (21, 48), (50, 30), (51, 42), (50, 15), (48, 21), (12, 38),
        (15, 56), (29, 39), (54, 38), (55, 57), (67, 41), (10, 70), (6, 25), (65, 27), (40, 60), (70, 64),
        (64, 4), (36, 6), (30, 20), (20, 30), (15, 5)
    ]

    demands = [
        0, 18, 26, 11, 30, 21, 19, 15, 16, 29, 26, 37, 16, 12, 31, 8, 19, 20, 13, 15,
        22, 28, 12, 6, 27, 14, 18, 17, 29, 13, 22, 25, 28, 27, 19, 10, 12, 14, 24, 16,
        33, 15, 11, 18, 17, 21, 27, 19, 20, 5, 22, 12, 19, 22, 16, 7, 26, 14, 21, 24,
        13, 15, 18, 11, 28
    ]

    # Вместимость грузовика
    capacity = 130
    answer = 792
    car = 10

    return coordinates, demands, capacity, car, answer


def test_20():
    # Исходные данные из задачи P-n70-k10

    # Координаты узлов и спрос
    coordinates = [
        (40, 40), (22, 22), (36, 26), (21, 45), (45, 35), (55, 20), (33, 34), (50, 50), (55, 45), (26, 59),
        (40, 66), (55, 65), (35, 51), (62, 35), (62, 57), (62, 24), (21, 36), (33, 44), (9, 56), (62, 48),
        (66, 14), (44, 13), (26, 13), (11, 28), (7, 43), (17, 64), (41, 46), (55, 34), (35, 16), (52, 26),
        (43, 26), (31, 76), (22, 53), (26, 29), (50, 40), (55, 50), (54, 10), (60, 15), (47, 66), (30, 60),
        (30, 50), (12, 17), (15, 14), (16, 19), (21, 48), (50, 30), (51, 42), (50, 15), (48, 21), (12, 38),
        (15, 56), (29, 39), (54, 38), (55, 57), (67, 41), (10, 70), (6, 25), (65, 27), (40, 60), (70, 64),
        (64, 4), (36, 6), (30, 20), (20, 30), (15, 5), (50, 70), (57, 72), (45, 42), (38, 33), (50, 4)
    ]

    demands = [
        0, 18, 26, 11, 30, 21, 19, 15, 16, 29, 26, 37, 16, 12, 31, 8, 19, 20, 13, 15,
        22, 28, 12, 6, 27, 14, 18, 17, 29, 13, 22, 25, 28, 27, 19, 10, 12, 14, 24, 16,
        33, 15, 11, 18, 17, 21, 27, 19, 20, 5, 22, 12, 19, 22, 16, 7, 26, 14, 21, 24,
        13, 15, 18, 11, 28, 9, 37, 30, 10, 8
    ]

    # Вместимость грузовика
    capacity = 135
    answer = 827
    car = 10

    return coordinates, demands, capacity, car, answer


def test_21():
    # Исходные данные из задачи P-n76-k4

    # Координаты узлов и спрос
    coordinates = [
        (40, 40), (22, 22), (36, 26), (21, 45), (45, 35), (55, 20), (33, 34), (50, 50), (55, 45), (26, 59),
        (40, 66), (55, 65), (35, 51), (62, 35), (62, 57), (62, 24), (21, 36), (33, 44), (9, 56), (62, 48),
        (66, 14), (44, 13), (26, 13), (11, 28), (7, 43), (17, 64), (41, 46), (55, 34), (35, 16), (52, 26),
        (43, 26), (31, 76), (22, 53), (26, 29), (50, 40), (55, 50), (54, 10), (60, 15), (47, 66), (30, 60),
        (30, 50), (12, 17), (15, 14), (16, 19), (21, 48), (50, 30), (51, 42), (50, 15), (48, 21), (12, 38),
        (15, 56), (29, 39), (54, 38), (55, 57), (67, 41), (10, 70), (6, 25), (65, 27), (40, 60), (70, 64),
        (64, 4), (36, 6), (30, 20), (20, 30), (15, 5), (50, 70), (57, 72), (45, 42), (38, 33), (50, 4),
        (66, 8), (59, 5), (35, 60), (27, 24), (40, 20), (40, 37)
    ]

    demands = [
        0, 18, 26, 11, 30, 21, 19, 15, 16, 29, 26, 37, 16, 12, 31, 8, 19, 20, 13, 15,
        22, 28, 12, 6, 27, 14, 18, 17, 29, 13, 22, 25, 28, 27, 19, 10, 12, 14, 24, 16,
        33, 15, 11, 18, 17, 21, 27, 19, 20, 5, 22, 12, 19, 22, 16, 7, 26, 14, 21, 24,
        13, 15, 18, 11, 28, 9, 37, 30, 10, 8, 11, 3, 1, 6, 10, 20
    ]

    # Вместимость грузовика
    capacity = 350
    answer = 593
    car = 4

    return coordinates, demands, capacity, car, answer


def test_22():
    # Исходные данные из задачи P-n76-k5

    # Координаты узлов и спрос
    coordinates = [
        (40, 40), (22, 22), (36, 26), (21, 45), (45, 35), (55, 20), (33, 34), (50, 50), (55, 45), (26, 59),
        (40, 66), (55, 65), (35, 51), (62, 35), (62, 57), (62, 24), (21, 36), (33, 44), (9, 56), (62, 48),
        (66, 14), (44, 13), (26, 13), (11, 28), (7, 43), (17, 64), (41, 46), (55, 34), (35, 16), (52, 26),
        (43, 26), (31, 76), (22, 53), (26, 29), (50, 40), (55, 50), (54, 10), (60, 15), (47, 66), (30, 60),
        (30, 50), (12, 17), (15, 14), (16, 19), (21, 48), (50, 30), (51, 42), (50, 15), (48, 21), (12, 38),
        (15, 56), (29, 39), (54, 38), (55, 57), (67, 41), (10, 70), (6, 25), (65, 27), (40, 60), (70, 64),
        (64, 4), (36, 6), (30, 20), (20, 30), (15, 5), (50, 70), (57, 72), (45, 42), (38, 33), (50, 4),
        (66, 8), (59, 5), (35, 60), (27, 24), (40, 20), (40, 37)
    ]

    demands = [
        0, 18, 26, 11, 30, 21, 19, 15, 16, 29, 26, 37, 16, 12, 31, 8, 19, 20, 13, 15,
        22, 28, 12, 6, 27, 14, 18, 17, 29, 13, 22, 25, 28, 27, 19, 10, 12, 14, 24, 16,
        33, 15, 11, 18, 17, 21, 27, 19, 20, 5, 22, 12, 19, 22, 16, 7, 26, 14, 21, 24,
        13, 15, 18, 11, 28, 9, 37, 30, 10, 8, 11, 3, 1, 6, 10, 20
    ]

    # Вместимость грузовика
    capacity = 280
    answer = 627
    car = 5

    return coordinates, demands, capacity, car, answer


def test_23():
    # Исходные данные из задачи P-n101-k4

    # Координаты узлов и спрос
    coordinates = [
        (35, 35), (41, 49), (35, 17), (55, 45), (55, 20), (15, 30), (25, 30), (20, 50), (10, 43), (55, 60),
        (30, 60), (20, 65), (50, 35), (30, 25), (15, 10), (30, 5), (10, 20), (5, 30), (20, 40), (15, 60),
        (45, 65), (45, 20), (45, 10), (55, 5), (65, 35), (65, 20), (45, 30), (35, 40), (41, 37), (64, 42),
        (40, 60), (31, 52), (35, 69), (53, 52), (65, 55), (63, 65), (2, 60), (20, 20), (5, 5), (60, 12),
        (40, 25), (42, 7), (24, 12), (23, 3), (11, 14), (6, 38), (2, 48), (8, 56), (13, 52), (6, 68),
        (47, 47), (49, 58), (27, 43), (37, 31), (57, 29), (63, 23), (53, 12), (32, 12), (36, 26), (21, 24),
        (17, 34), (12, 24), (24, 58), (27, 69), (15, 77), (62, 77), (49, 73), (67, 5), (56, 39), (37, 47),
        (37, 56), (57, 68), (47, 16), (44, 17), (46, 13), (49, 11), (49, 42), (53, 43), (61, 52), (57, 48),
        (56, 37), (55, 54), (15, 47), (14, 37), (11, 31), (16, 22), (4, 18), (28, 18), (26, 52), (26, 35),
        (31, 67), (15, 19), (22, 22), (18, 24), (26, 27), (25, 24), (22, 27), (25, 21), (19, 21), (20, 26),
        (18, 18)
    ]

    demands = [
        0, 10, 7, 13, 19, 26, 3, 5, 9, 16, 16, 12, 19, 23, 20, 8, 19, 2, 12, 17,
        9, 11, 18, 29, 3, 6, 17, 16, 16, 9, 21, 27, 23, 11, 14, 8, 5, 8, 16, 31,
        9, 5, 5, 7, 18, 16, 1, 27, 36, 30, 13, 10, 9, 14, 18, 2, 6, 7, 18, 28,
        3, 13, 19, 10, 9, 20, 25, 25, 36, 6, 5, 15, 25, 9, 8, 18, 13, 14, 3, 23,
        6, 26, 16, 11, 7, 41, 35, 26, 9, 15, 3, 1, 2, 22, 27, 20, 11, 12, 10, 9,
        17
    ]

    # Вместимость грузовика
    capacity = 400
    answer = 681
    car = 4

    return coordinates, demands, capacity, car, answer


def all_P_set():
    return [test_1(), test_2(), test_3(), test_4(), test_5(), test_6(),
            test_7(), test_8(), test_9(), test_10(), test_11(), test_12(),
            test_13(), test_14(), test_15(), test_16(), test_17(), test_18(), test_19(),
            test_20(), test_21(), test_22(), test_23()]
